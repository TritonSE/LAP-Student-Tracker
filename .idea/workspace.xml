<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="26612eff-f76b-42f6-8ac3-f6006532fdc7" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/components/CreateEventsWizard/CreateEventsWizard.module.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/CreateEventsWizard/CreateEventsWizard.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/CreateEventsWizard/RepeatModal.module.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/CreateEventsWizard/RepeatModal.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/HomePage/AdminHomePage.module.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/ResetPassword/ForgotPasswordHelp.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/components/ResetPassword/ForgotPasswordLanding.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/forgotpassword.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pages/resetpassword.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/AddIcon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/CloseIcon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/TeacherIcon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/public/TimeIcon.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/addClassData.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/styles/ForgotPassword.module.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__tests__/classes.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__tests__/classes.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/HomePage/AdminHomePage.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/HomePage/AdminHomePage.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/LeaguePage/ClassView.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/LeaguePage/ClassView.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Login/LoginPageMain.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Login/LoginPageMain.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/Navbar/NavbarLayout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/Navbar/NavbarLayout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context/AuthContext.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/context/AuthContext.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/context/LeagueAPI.ts" beforeDir="false" afterPath="$PROJECT_DIR$/context/LeagueAPI.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/database/classes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/database/classes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/modules.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/class/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/pages/api/class/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/home.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/home.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/league.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/pages/league.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/styles/Home.module.css" beforeDir="false" afterPath="$PROJECT_DIR$/styles/Home.module.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/styles/app.css" beforeDir="false" afterPath="$PROJECT_DIR$/styles/app.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/styles/globals.css" beforeDir="false" afterPath="$PROJECT_DIR$/styles/globals.css" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feature/allisonbhavsar/12-class-check-teacher-availability" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="27rXP9Age9omiFJrTZjxOv5mFzD" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/anshulbirla/TSE/LAP-Student-Tracker/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "prettierjs.PrettierConfiguration.Package": "/Users/anshulbirla/TSE/LAP-Student-Tracker/node_modules/prettier",
    "ts.external.directory.path": "/Users/anshulbirla/TSE/LAP-Student-Tracker/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="[GET] /api/availability-feed/" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/__tests__/availibilities-feed.test.ts" />
      <test-names>
        <test-name value="[GET] /api/availability-feed/" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.[GET] /api/availability-feed/" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="26612eff-f76b-42f6-8ac3-f6006532fdc7" name="Changes" comment="" />
      <created>1650079153315</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1650079153315</updated>
      <workItem from="1650079155807" duration="1066000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>