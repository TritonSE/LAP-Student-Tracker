<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="26612eff-f76b-42f6-8ac3-f6006532fdc7" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__tests__/events.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__tests__/events.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/CreateEventsWizard/CreateEventsWizard.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/CreateEventsWizard/CreateEventsWizard.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ManageAvailabilityWizard/TimeSlot.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/components/ManageAvailabilityWizard/TimeSlot.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/database/events.ts" beforeDir="false" afterPath="$PROJECT_DIR$/lib/database/events.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pages/api/events/class/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/pages/api/events/class/index.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feature/allisonbhavsar/12-class-check-teacher-availability" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="27rXP9Age9omiFJrTZjxOv5mFzD" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs.jest.jest_package&quot;: &quot;/Users/anshulbirla/TSE/LAP-Student-Tracker/node_modules/jest&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/Users/anshulbirla/TSE/LAP-Student-Tracker/node_modules/prettier&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/anshulbirla/TSE/LAP-Student-Tracker/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Jest.[GET] /api/availability-feed/">
    <configuration name="[GET] /api/availability-feed/" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/__tests__/availibilities-feed.test.ts" />
      <test-names>
        <test-name value="[GET] /api/availability-feed/" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[GET] /api/availability-feed/.Get availability for a period where no classes interfere" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/availibilities-feed.test.ts" />
      <test-names>
        <test-name value="[GET] /api/availability-feed/" />
        <test-name value="Get availability for a period where no classes interfere" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[GET] /api/availability-feed/.Getting availabilities when a class interferes for the beginning of the available period" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/availibilities-feed.test.ts" />
      <test-names>
        <test-name value="[GET] /api/availability-feed/" />
        <test-name value="Getting availabilities when a class interferes for the beginning of the available period" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[GET] /api/availability-feed/.Getting availabilities when user has 2 classes in a day and multiple overlapping availabilities" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/availibilities-feed.test.ts" />
      <test-names>
        <test-name value="[GET] /api/availability-feed/" />
        <test-name value="Getting availabilities when user has 2 classes in a day and multiple overlapping availabilities" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="[GET] /api/availability-feed/.Getting availability for a period where the user has a class completely within the availability period" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/availibilities-feed.test.ts" />
      <test-names>
        <test-name value="[GET] /api/availability-feed/" />
        <test-name value="Getting availability for a period where the user has a class completely within the availability period" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.[GET] /api/availability-feed/" />
        <item itemvalue="Jest.[GET] /api/availability-feed/.Getting availabilities when user has 2 classes in a day and multiple overlapping availabilities" />
        <item itemvalue="Jest.[GET] /api/availability-feed/.Getting availabilities when a class interferes for the beginning of the available period" />
        <item itemvalue="Jest.[GET] /api/availability-feed/.Get availability for a period where no classes interfere" />
        <item itemvalue="Jest.[GET] /api/availability-feed/.Getting availability for a period where the user has a class completely within the availability period" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="26612eff-f76b-42f6-8ac3-f6006532fdc7" name="Changes" comment="" />
      <created>1650079153315</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1650079153315</updated>
      <workItem from="1650079155807" duration="1066000" />
      <workItem from="1650314134691" duration="93000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>